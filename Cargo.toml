[package]
name = "gemini-ox"
version = "0.1.0"
edition = "2021"

[features]
default = []
leaky-bucket = ["dep:leaky-bucket"]

[dependencies]
reqwest = { version = "0.12", default-features = false, features = [
  "http2",
  "charset",
  "json",
  "rustls-tls",
  "stream",
  "multipart",
] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
thiserror = "1.0"
leaky-bucket = { version = "1.0", optional = true }
futures = { version = "0.3", default-features = false, features = ["std"] }
derivative = "2.2"
schemars = "0.8.16"
bytes = "1.7"

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.4"
serde-wasm-bindgen = "0.6"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { version = "1.39", features = ["rt", "macros"] }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3"
console_error_panic_hook = "0.1.7"

[lints.clippy]
all = { level = "warn", priority = -2 }
# restriction
dbg_macro = "warn"
todo = "warn"
unimplemented = "warn"
# I like the explicitness of this rule as it removes confusion around `clone`.
# This increases readability, avoids `clone` mindlessly and heap allocating on accident.
clone_on_ref_ptr = "warn"
# These two are mutually exclusive, I like `mod.rs` files for better fuzzy searches on module entries.
self_named_module_files = "warn"         # "-Wclippy::mod_module_files"
empty_drop = "warn"
empty_structs_with_brackets = "warn"
exit = "warn"
filetype_is_file = "warn"
get_unwrap = "warn"
impl_trait_in_params = "allow"
rc_buffer = "warn"
rc_mutex = "warn"
rest_pat_in_fully_bound_structs = "warn"
unnecessary_safety_comment = "warn"
undocumented_unsafe_blocks = "warn"
# I want to write the best Rust code so pedantic is enabled.
# We should only disable rules globally if they are either false positives, chaotic, or does not make sense.
pedantic = { level = "warn", priority = -1 }
# Allowed rules
# pedantic
# This rule is too pedantic, I don't want to force this because naming things are hard.
module_name_repetitions = "allow"
# All triggers are mostly ignored in this codebase, so this is ignored globally.
struct_excessive_bools = "allow"
too_many_lines = "allow"
doc_markdown = "allow"
# nursery
# `const` functions do not make sense for our project because this is not a `const` library.
# This rule also confuses new comers and forces them to add `const` blindlessly without any reason.
missing_const_for_fn = "allow"
missing_errors_doc = "allow"
missing_panics_doc = "allow"
